{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"size",
				"sizeof"
			],
			[
				"BLOCK",
				"BLOCK_SIZE"
			],
			[
				"siz",
				"sizeof"
			],
			[
				"buff",
				"buffer_read"
			],
			[
				"free",
				"free_inodes_count"
			],
			[
				"buffer",
				"buffer_write"
			],
			[
				"blo",
				"block_group_descriptor"
			],
			[
				"inod",
				"inode_num"
			],
			[
				"boot",
				"bootstrap"
			],
			[
				"e_ph",
				"e_phoff"
			],
			[
				"elf",
				"elf32_phdr"
			],
			[
				"vfs",
				"vfs_entry"
			],
			[
				"block",
				"block_group_descriptor"
			],
			[
				"ext2",
				"ext2_open"
			],
			[
				"ino",
				"inode_dump"
			],
			[
				"ext2_open",
				"ext2_open_dir"
			],
			[
				"RTYC",
				"RTC_DAY"
			],
			[
				"year",
				"years"
			],
			[
				"day",
				"days"
			],
			[
				"hor",
				"hours"
			],
			[
				"time",
				"time_t"
			],
			[
				"RTC",
				"RTC_SEC"
			],
			[
				"uin",
				"uint16_t"
			],
			[
				"fr",
				"free_inodes_count"
			],
			[
				"ide",
				"idequeue"
			],
			[
				"bu",
				"buffer_get"
			],
			[
				"B_",
				"B_BUSY"
			],
			[
				"ac",
				"acquire"
			],
			[
				"ma",
				"markov"
			],
			[
				"wor",
				"wordlist"
			],
			[
				"tot",
				"total_words"
			],
			[
				"nex",
				"nextw	statement"
			],
			[
				"ne",
				"nextw	statement"
			],
			[
				"rad",
				"readline	function"
			],
			[
				"k_pa",
				"k_page_alloc"
			],
			[
				"_ini",
				"_init_pd	label"
			],
			[
				"KE",
				"KERNEL_VIRT"
			],
			[
				"KERNEL",
				"KERNEL_VIRT"
			],
			[
				"_",
				"_init_pt"
			],
			[
				"KERNE",
				"KERNEL_VIRT"
			],
			[
				"K",
				"KERNEL_PAGE_DIRECTORY"
			],
			[
				"KER",
				"KERNEL_VIRT"
			],
			[
				"KERN",
				"KERNEL_VIRT"
			],
			[
				"MM",
				"MM_CURRENT_PD"
			],
			[
				"_in",
				"_init_pd"
			],
			[
				"stack",
				"stack_top"
			],
			[
				"sta",
				"stack_top"
			],
			[
				"kerne",
				"kernel_initialize"
			],
			[
				"PF",
				"PF_RW"
			],
			[
				"add",
				"address"
			],
			[
				"_init",
				"_init_pd"
			],
			[
				"CU",
				"CURRENT_PAGE_DIRECTORY"
			],
			[
				"0x",
				"0x00000010"
			],
			[
				"chil",
				"child_esp"
			],
			[
				"te",
				"test_user_function"
			],
			[
				"sys",
				"system_tss"
			],
			[
				"page",
				"pagedir"
			],
			[
				"re",
				"release"
			],
			[
				"pare",
				"parent_esp"
			],
			[
				"last",
				"last_alloc"
			],
			[
				"las",
				"LAST_ALLOC"
			],
			[
				"K_",
				"K_LAST_ALLOC"
			],
			[
				"bc",
				"bc_start"
			],
			[
				"m",
				"memlock"
			],
			[
				"hea",
				"heap_top"
			],
			[
				"malloc",
				"malloc_t"
			],
			[
				"find",
				"find_first_free"
			],
			[
				"k",
				"k_paging_unmap"
			],
			[
				"des",
				"dest_free"
			],
			[
				"va",
				"va_dest"
			],
			[
				"k_",
				"k_paging_map"
			],
			[
				"k_p",
				"k_paging_unmap"
			],
			[
				"_paging",
				"_paging_map_more"
			],
			[
				"mem",
				"memlock"
			],
			[
				"pa_",
				"pa_src"
			],
			[
				"_p",
				"_paging_get_phys"
			],
			[
				"0x3",
				"0x3FF"
			],
			[
				"is",
				"is_mapped"
			],
			[
				"C",
				"CURRENT_PAGE_DIRECTORY"
			],
			[
				"pa",
				"page_tables_needed"
			],
			[
				"_pa",
				"_paging_map"
			],
			[
				"_pag",
				"_upaging_map"
			],
			[
				"dest",
				"dest_pt"
			],
			[
				"src",
				"src_pt"
			],
			[
				"load",
				"k_paging_load_directory"
			],
			[
				"proc",
				"process"
			],
			[
				"spi",
				"spin_unlock"
			],
			[
				"spin",
				"spin_lock"
			],
			[
				"cur",
				"current_pid"
			],
			[
				"pro",
				"proc_link"
			],
			[
				"heap",
				"heap_brk"
			],
			[
				"ge",
				"get_eflags"
			],
			[
				"fre",
				"free_vpage"
			],
			[
				"bloc",
				"blockchain_add"
			],
			[
				"K_HE",
				"K_HEAP_TOP"
			],
			[
				"swa",
				"swap_to"
			],
			[
				"iq",
				"iqlock"
			],
			[
				"get",
				"get_context"
			],
			[
				"contxt",
				"context"
			],
			[
				"con",
				"context"
			],
			[
				"curre",
				"current_thread"
			],
			[
				"ff",
				"ff_PD"
			],
			[
				"vga",
				"vga_kputs"
			],
			[
				"ptr",
				"ptr200"
			],
			[
				"fi",
				"find_best_free"
			],
			[
				"sma",
				"smallest"
			],
			[
				"sm",
				"smallest"
			],
			[
				"small",
				"smallest_sz"
			],
			[
				"BLO",
				"BLOCKS_ALLOCATED"
			],
			[
				"tr",
				"traverse_blockchain"
			],
			[
				"BLOC",
				"BLOCKCHAIN_START"
			],
			[
				"BL",
				"BLOCKCHAIN_START"
			],
			[
				"TK_",
				"TK_LAST_ALLOC"
			],
			[
				"TK",
				"TK_LAST_ALLOC"
			],
			[
				"to",
				"to_traverse"
			],
			[
				"total",
				"total_size"
			],
			[
				"MAX",
				"MAX_BLOCKS"
			],
			[
				"TK_HEAP",
				"TK_HEAP_BOTTOM"
			],
			[
				"k_a",
				"k_add_block"
			],
			[
				"BLOCk",
				"BLOCKS_ALLOCATED"
			],
			[
				"kb",
				"kb_tell"
			],
			[
				"buf",
				"buffer_set"
			],
			[
				"timer",
				"timer_buf"
			],
			[
				"k_set",
				"k_sched_state"
			],
			[
				"z",
				"z"
			],
			[
				"k_sched",
				"k_sched_next"
			],
			[
				"k_sche",
				"k_sched_state"
			],
			[
				"state",
				"state"
			]
		]
	},
	"buffers":
	[
		{
			"file": "kernel/vga.c",
			"settings":
			{
				"buffer_size": 4551,
				"line_ending": "Windows"
			}
		},
		{
			"file": "kernel/malloc.c",
			"settings":
			{
				"buffer_size": 11982,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Makefile",
			"settings":
			{
				"buffer_size": 1900,
				"line_ending": "Windows"
			}
		},
		{
			"file": "kernel/ext2.c",
			"settings":
			{
				"buffer_size": 5288,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/Documents/GitHub/ext2util/Makefile",
			"settings":
			{
				"buffer_size": 1228,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/Documents/GitHub/ext2util/ext2_debug.c",
			"settings":
			{
				"buffer_size": 4269,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/Documents/GitHub/ext2util/ext2.c",
			"settings":
			{
				"buffer_size": 11156,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/Documents/GitHub/ext2util/ext2.h",
			"settings":
			{
				"buffer_size": 4463,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/Documents/GitHub/ext2util/ide.h",
			"settings":
			{
				"buffer_size": 1891,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/Documents/GitHub/markov/markov.c",
			"settings":
			{
				"buffer_size": 2795,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/Documents/GitHub/osdev-test/elfloader.c",
			"settings":
			{
				"buffer_size": 1498,
				"line_ending": "Windows"
			}
		},
		{
			"file": "kernel/vfs.c",
			"settings":
			{
				"buffer_size": 2002,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "/*\nkernel.c\n===============================================================================\nMIT License\nCopyright (c) 2007-2016 Michael Lazear\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n===============================================================================\n*/\n\n#include <kernel.h>\n#include <vga.h>\n#include <x86.h>\n#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n#include <types.h>\n#include <mutex.h>\n#include <proc.h>\n#include <assert.h>\n#include <ide.h>\n#include <ext2.h>\n#include <elf.h>\n\nchar logo[] = {0x5f,0x5f,0x5f,0x2e,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x5f,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x2e,0x5f,0x5f,0x20,0x20,0x20,0x0a,0x5c,0x5f,0x20,0x7c,0x5f,0x5f,0x20,0x5f,0x5f,0x5f,0x5f,0x5f,0x20,0x5f,0x5f,0x5f,0x5f,0x5f,0x5f,0x5f,0x20,0x20,0x20,0x5f,0x5f,0x5f,0x5f,0x20,0x20,0x20,0x5f,0x5f,0x5f,0x5f,0x5f,0x20,0x20,0x20,0x5f,0x5f,0x5f,0x5f,0x5f,0x2f,0x20,0x20,0x7c,0x5f,0x5f,0x5f,0x5f,0x5f,0x5f,0x20,0x20,0x7c,0x20,0x20,0x7c,0x20,0x20,0x0a,0x20,0x7c,0x20,0x5f,0x5f,0x20,0x5c,0x5c,0x5f,0x5f,0x20,0x20,0x5c,0x5c,0x5f,0x20,0x20,0x5f,0x5f,0x20,0x5c,0x5f,0x2f,0x20,0x5f,0x5f,0x20,0x5c,0x20,0x2f,0x20,0x20,0x20,0x20,0x20,0x5c,0x5f,0x2f,0x20,0x5f,0x5f,0x20,0x5c,0x20,0x20,0x20,0x5f,0x5f,0x5c,0x5f,0x5f,0x20,0x20,0x5c,0x20,0x7c,0x20,0x20,0x7c,0x20,0x20,0x0a,0x20,0x7c,0x20,0x5c,0x5f,0x5c,0x20,0x5c,0x2f,0x20,0x5f,0x5f,0x20,0x5c,0x7c,0x20,0x20,0x7c,0x20,0x5c,0x2f,0x5c,0x20,0x20,0x5f,0x5f,0x5f,0x2f,0x7c,0x20,0x20,0x59,0x20,0x59,0x20,0x20,0x5c,0x20,0x20,0x5f,0x5f,0x5f,0x2f,0x7c,0x20,0x20,0x7c,0x20,0x20,0x2f,0x20,0x5f,0x5f,0x20,0x5c,0x7c,0x20,0x20,0x7c,0x5f,0x5f,0x0a,0x20,0x7c,0x5f,0x5f,0x5f,0x20,0x20,0x28,0x5f,0x5f,0x5f,0x5f,0x20,0x20,0x2f,0x5f,0x5f,0x7c,0x20,0x20,0x20,0x20,0x5c,0x5f,0x5f,0x5f,0x20,0x20,0x3e,0x5f,0x5f,0x7c,0x5f,0x7c,0x20,0x20,0x2f,0x5c,0x5f,0x5f,0x5f,0x20,0x20,0x3e,0x5f,0x5f,0x7c,0x20,0x28,0x5f,0x5f,0x5f,0x5f,0x20,0x20,0x2f,0x5f,0x5f,0x5f,0x5f,0x2f,0x0a,0x20,0x20,0x20,0x20,0x20,0x5c,0x2f,0x20,0x20,0x20,0x20,0x20,0x5c,0x2f,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5c,0x2f,0x20,0x20,0x20,0x20,0x20,0x20,0x5c,0x2f,0x20,0x20,0x20,0x20,0x20,0x5c,0x2f,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5c,0x2f,0x20,0x20,0x20,0x20,0x20, '\\n'};\n\nstatic mutex key_mutex = { .lock = 0 };\n\nextern STREAM* kb;\n\nextern void scheduler();\nvoid scheduler() {}\nextern void switch_to_user(void* (fn)(), uint32_t esp);\n//We enter into kernel initialize with the GDT and IDT already loaded, and interrupts disabled\n\nextern uint32_t* KERNEL_PAGE_DIRECTORY;\nuint32_t KERNEL_END = 0;\nextern uint32_t _init_pt[];\nextern uint32_t _init_pd[];\nextern uint32_t stack_top;\nextern uint32_t stack_bottom;\n\n\n\n\nvoid kernel_initialize(uint32_t kernel_end) {\n\n	/*\n	1.	Initialize physical memory manager, with private heap @ kernel_end to 2MB\n			- Bitmap has the first 2MB (512 bits) marked as used, will not be allocated\n			- Allows k_page_alloc()\n	2.	Initialize paging, passing the reserved first page directory address\n	3.	Initialize heap management with malloc, free, and sbrk.\n			- Utilizes both k_page_alloc() and k_paging_map() to generate a continous\n				virtual address space.\n			- Public heap starts at 3GB. This should be changed when higher half is implemented\n	4.	Todo - initialize multithreading.\n	*/\n\n	KERNEL_END = kernel_end;\n	k_mm_init(kernel_end);\n	k_heap_init();\n	k_paging_init(_init_pd);\n\n	keyboard_install();\n	timer_init();\n	syscall_init();\n\n	sti();\n\n	vga_setcolor(VGA_COLOR(VGA_WHITE, VGA_BLACK));\n	vga_clear();\n	vga_pretty(logo, VGA_LIGHTGREEN);\n\n	ide_init();\n	buffer_init();\n\n//	lsroot();\n	//sb_dump(ext2_superblock(1));\n	//inode_dump(ext2_inode(1,11));\n\n	/*\n	char* data = ext2_open(ext2_inode(1,12));\n	//char* data = & _binary_app_sso_start;\n	elf32_ehdr * ehdr = (elf32_ehdr*) data; \n	assert(ehdr->e_ident[0] == ELF_MAGIC);\n	printf(\"r->e_ident %x\\t\",ehdr->e_ident[0]);     \n	printf(\"dr->e_type %x\\t\", ehdr->e_type);                \n	printf(\">e_machine %x\\n\", ehdr->e_machine);              \n	printf(\">e_version %x\\t\",ehdr->e_version);              \n	printf(\"r->e_entry %x\\t\",ehdr->e_entry);                \n	printf(\"r->e_phoff %x\\n\",ehdr->e_phoff);                \n	printf(\"r->e_shoff %x\\t\",ehdr->e_shoff);                \n	printf(\"r->e_flags %x\\t\",ehdr->e_flags);           \n	printf(\"->e_ehsize %x\\n\", ehdr->e_ehsize);               \n	printf(\"_phentsize %x\\t\", ehdr->e_phentsize);            \n	printf(\"r->e_phnum %x\\t\", ehdr->e_phnum);                \n	printf(\"_shentsize %x\\n\", ehdr->e_shentsize);            \n	printf(\"r->e_shnum %x\\t\", ehdr->e_shnum);               \n	printf(\"e_shstrndx %x\\n\", ehdr->e_shstrndx);    \n\n	elf32_phdr* phdr = (elf32_phdr*) ((uint32_t) data + ehdr->e_phoff);\n	printf(\"LOAD: offset 0x%x vaddr 0x%x paddr 0x%x filesz 0x%x memsz 0x%x\\n\",\n		 				phdr->p_offset, phdr->p_vaddr, phdr->p_paddr, phdr->p_filesz, phdr->p_memsz);\n\n	*/\n\n	//int i = ext2_touch(\"data\", 'Hello, World!', 13);\n\n	lsroot();\n\n//	asm volatile (\"int $0x80\");\n	for(;;);\n}\n\n\n",
			"file": "kernel/kernel.c",
			"file_size": 6286,
			"file_write_time": 131170995992322576,
			"settings":
			{
				"buffer_size": 6085,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/Documents/GitHub/osdev-test/Makefile",
			"settings":
			{
				"buffer_size": 884,
				"line_ending": "Windows"
			}
		},
		{
			"file": "kernel/include/ext2.h",
			"settings":
			{
				"buffer_size": 4438,
				"line_ending": "Windows"
			}
		},
		{
			"file": "kernel/stage2.asm",
			"settings":
			{
				"buffer_size": 3423,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "pack",
		"selected_items":
		[
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"anacoda",
				"Anaconda: Disable linting on this file"
			],
			[
				"delint",
				"Anaconda: Disable linting on this file"
			],
			[
				"dislint",
				"Anaconda: Disable linting on this file"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"packag",
				"Preferences: Browse Packages"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 160.0,
		"history":
		[
			"def fastaUniProt(x):",
			"fastaUniProt()",
			"stop()",
			"exit()",
			"help",
			"help()",
			"version()",
			"version",
			"import numpy.matrix",
			"import numpy",
			"names = [[][]]",
			"names",
			"names[1].append(2)",
			"names[0].append(1)",
			"names",
			"names=[[]]",
			"names[1].append(1)",
			"names",
			"names.append(1)",
			"names",
			"names[0].append(1)",
			"names",
			"names.append(1)",
			"names",
			"names=[[]]",
			"names",
			"names=[]",
			"names = [1][1]",
			"next(c)",
			"reader = csv.reader(c, delimiter='\\t')",
			"reader = csv.read(c, delimiter='\\t')",
			"import csv",
			"c = open('compare.txt')",
			"c.read()",
			"c",
			"c.read()",
			"c",
			"c = open('compare.txt')",
			"print(\"hello\")",
			"help()",
			"help",
			"dir()",
			"dir",
			"ls",
			"c",
			"py",
			"python",
			"sublimetest",
			"b",
			"help",
			"python --version",
			"python",
			"function1",
			"x",
			"function(h)",
			"function",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/D/Documents/GitHub/echo/echo.asm",
		"/D/Documents/GitHub/baremetal/kernel/include/types.h",
		"/D/Documents/GitHub/ext2util/ext2.h",
		"/D/Documents/GitHub/baremetal/kernel/ext2_debug.c",
		"/D/Documents/GitHub/baremetal/kernel/ide.c",
		"/D/Documents/GitHub/osdev-test/cboot.c",
		"/D/Documents/GitHub/baremetal/ext2.img",
		"/D/Documents/GitHub/osdev-test/test.c",
		"/D/Documents/GitHub/osdev-test/bootstrap.asm",
		"/D/Documents/GitHub/osdev-test/bootstrap",
		"/D/Documents/GitHub/baremetal/kernel/app.asm",
		"/D/Documents/GitHub/baremetal/kernel/paging.c",
		"/D/Documents/GitHub/baremetal/kernel/include/elf.h",
		"/D/Documents/GitHub/baremetal/kernel/int32_test.c",
		"/D/Documents/GitHub/baremetal/kernel/lib/string.c",
		"/D/Documents/GitHub/baremetal/kernel/lib/stdlib.c",
		"/D/Documents/GitHub/baremetal/kernel/ext2.c",
		"/D/Documents/GitHub/baremetal/kernel/rtc.c",
		"/D/Documents/GitHub/baremetal/linker.ld",
		"/D/Documents/GitHub/baremetal/Makefile",
		"/D/Documents/GitHub/baremetal/kernel/arch/trap.c",
		"/D/Documents/GitHub/baremetal/kernel/arch/x86.c",
		"/D/Documents/GitHub/baremetal/kernel/syscall.c",
		"/D/Documents/GitHub/baremetal/kernel/include/ide.h",
		"/D/Documents/GitHub/baremetal/kernel/vfs.c",
		"/D/Documents/GitHub/baremetal/kernel/kernel.c",
		"/D/Documents/GitHub/osdev-test/boot",
		"/D/Documents/GitHub/baremetal/app.sso",
		"/D/Documents/GitHub/baremetal/app.ld",
		"/D/Documents/GitHub/baremetal/kernel/app.o",
		"/D/Documents/GitHub/baremetal/kernel/bootstrap",
		"/D/Documents/GitHub/baremetal/kernel/include/elf32.h",
		"/D/Documents/GitHub/xv6-public/elf.h",
		"/D/Documents/GitHub/baremetal/kernel/include/ext2.h",
		"/D/Documents/GitHub/osdev-test/linker.ld",
		"/D/Downloads/snapshot.06.10.09/asm/bootsect.asm",
		"/D/Documents/GitHub/osdev-test/boot.s",
		"/D/Documents/GitHub/baremetal/ext.img",
		"/D/Documents/GitHub/baremetal/fs.img",
		"/D/Documents/GitHub/baremetal/kernel/include/ctype.h",
		"/D/Documents/GitHub/baremetal/kernel/include/assert.h",
		"/D/Documents/GitHub/markov/markov.c",
		"/D/Documents/GitHub/markov/plot",
		"/D/Documents/GitHub/markov/exac",
		"/D/Documents/GitHub/markov/markov.py",
		"/D/Documents/GitHub/markov/test",
		"/D/Documents/GitHub/markov/LICENSE",
		"/D/Documents/GitHub/markov/Makefile",
		"/D/Documents/GitHub/baremetal/kernel/vga.c",
		"/D/Documents/GitHub/baremetal/kernel/timer.c",
		"/D/Documents/GitHub/baremetal/kernel/keyboard.c",
		"/D/Documents/GitHub/baremetal/kernel/arch/start.s",
		"/D/Documents/GitHub/baremetal/kernel/arch/switch_to_user.s",
		"/D/Documents/GitHub/baremetal/kernel/arch/sched.s",
		"/D/Documents/GitHub/baremetal/kernel/arch/vectors.s",
		"/D/Documents/GitHub/baremetal/kernel/arch/trap_handler.s",
		"/D/Documents/GitHub/baremetal/kernel/arch/syscall.s",
		"/D/Documents/GitHub/baremetal/kernel/arch/pic.c",
		"/D/Documents/GitHub/baremetal/kernel/arch/initcode.s",
		"/D/Documents/GitHub/baremetal/kernel/lib/printf.c",
		"/D/Documents/GitHub/baremetal/kernel/lib/stdio.c",
		"/D/Documents/GitHub/baremetal/kernel/mutex.c",
		"/D/Documents/GitHub/baremetal/kernel/mm.c",
		"/D/Downloads/snapshot.06.10.09/asm/higherhalf.s",
		"/D/Documents/GitHub/baremetal/kernel/include/x86.h",
		"/D/Documents/GitHub/baremetal/kernel/malloc.c",
		"/D/Documents/GitHub/baremetal/kernel/include/kernel.h",
		"/D/Documents/GitHub/baremetal/kernel/fork.c",
		"/D/Documents/GitHub/baremetal/kernel/sched.c",
		"/D/Documents/GitHub/baremetal/kernel/include/proc.h",
		"/D/Documents/GitHub/xv6-public/proc.c",
		"/D/Documents/GitHub/baremetal/kernel/bio.c",
		"/D/Documents/GitHub/baremetal/kernel/fs.c",
		"/C/Users/Mike/Documents/GitHub/baremetal/kernel/Find Results",
		"/C/Users/Mike/Documents/GitHub/baremetal/kernel/keyboard.c",
		"/C/Users/Mike/Documents/GitHub/baremetal/kernel/include/paging.h",
		"/C/Users/Mike/Documents/GitHub/baremetal/kernel/arch/start.s",
		"/C/Users/Mike/Documents/GitHub/baremetal/kernel/arch/x86.c",
		"/C/Users/Mike/Documents/GitHub/xv6-public/Makefile",
		"/C/Users/Mike/Documents/GitHub/xv6-public/mkfs.c",
		"/C/Users/Mike/Documents/GitHub/xv6-public/mkfs",
		"/C/Users/Mike/Documents/GitHub/baremetal/kernel/arch/sched.s",
		"/C/Users/Mike/Documents/GitHub/baremetal/kernel/include/mutex.h",
		"/C/Users/Mike/Documents/GitHub/baremetal/kernel/mutex.c",
		"/C/Users/Mike/Documents/GitHub/baremetal/kernel/include/assert.h",
		"/C/Users/Mike/Documents/GitHub/baremetal/kernel/include/types.h",
		"/C/Users/Mike/Documents/GitHub/baremetal/kernel/thread.c",
		"/C/Users/Mike/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/C/Users/Mike/Documents/GitHub/baremetal/kernel/timer.c",
		"/C/Users/Mike/Documents/GitHub/baremetal/kernel/lib/stdio.c",
		"/C/Users/Mike/Documents/GitHub/baremetal/kernel/vfs.c",
		"/C/Users/Mike/Documents/GitHub/baremetal/kernel/lib/stdlib.c",
		"/D/Downloads/snapshot.06.10.09/core/task/taskapi.c",
		"/D/Downloads/snapshot.06.10.09/core/task/task.c",
		"/D/Downloads/snapshot.06.10.09/core/task/sched.c",
		"/D/Documents/GitHub/baremetal/kernel/arch/pswitch.s",
		"/D/Documents/GitHub/baremetal/kernel/arch/pswith.s",
		"/D/Documents/GitHub/baremetal/include/types.h",
		"/D/Documents/GitHub/baremetal/include/stdio.h",
		"/D/Documents/GitHub/baremetal/kernel/lib/stdio/stdio.c",
		"/D/Documents/GitHub/baremetal/heap.c",
		"/D/Documents/GitHub/baremetal/include/string.h",
		"/D/Documents/GitHub/baremetal/x86.c",
		"/D/Documents/GitHub/baremetal/kernel.c",
		"/D/Documents/GitHub/baremetal/stdlib.c",
		"/D/Documents/GitHub/baremetal/mm.c",
		"/D/Documents/GitHub/baremetal/keyboard.c",
		"/D/Documents/GitHub/baremetal/string.c",
		"/D/Documents/GitHub/baremetal/include/x86.h",
		"/D/Documents/GitHub/baremetal/include/ctype.h",
		"/D/Documents/GitHub/baremetal/include/kernel.h",
		"/D/Documents/GitHub/baremetal/include/signal.h",
		"/D/Documents/GitHub/baremetal/include/assert.h",
		"/D/Documents/GitHub/baremetal/include/stdlib.h",
		"/D/Documents/GitHub/baremetal/include/stdarg.h",
		"/D/Documents/GitHub/baremetal/include/vga.h",
		"/D/Documents/GitHub/baremetal/include/paging.h",
		"/D/Documents/GitHub/baremetal/stream.c",
		"/D/Documents/GitHub/baremetal/paging.c",
		"/D/Documents/GitHub/baremetal/printf.c",
		"/D/Documents/GitHub/baremetal/video.c",
		"/D/Documents/GitHub/baremetal/vga.c",
		"/D/Documents/GitHub/baremetal/thread.c",
		"/D/Documents/GitHub/baremetal/include/thread.h",
		"/D/Documents/GitHub/baremetal/task.c",
		"/D/Documents/GitHub/baremetal/start.s",
		"/C/Users/Mike/Documents/GitHub/baremetal/vga.c",
		"/C/Users/Mike/Documents/GitHub/baremetal/x86.c"
	],
	"find":
	{
		"height": 36.0
	},
	"find_in_files":
	{
		"height": 102.0,
		"where_history":
		[
			"<current file>",
			"D:\\Documents\\GitHub\\xv6-public",
			"D:\\Documents\\GitHub\\baremetal",
			"C:\\Users\\Mike\\Documents\\GitHub\\baremetal",
			"D:\\Documents\\GitHub\\baremetal\\",
			"D:\\Documents\\GitHub\\baremetal",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"rootd",
			"i ",
			"i",
			"0000",
			"ph",
			"uint32_t",
			"uint16_t",
			"                 ",
			"                ",
			"               ",
			"              ",
			"             ",
			"            ",
			"           ",
			"          ",
			"         ",
			"        ",
			"       ",
			"      ",
			"     ",
			"    ",
			"Elf32_Half",
			"Elf32_Off",
			"4865",
			"time",
			"days",
			"RtcGetMinute",
			"rtc_send",
			"** ",
			"16",
			"</i>",
			"<i>",
			"- KERNEL_VIRT",
			"0x23",
			"bread",
			"reads",
			"uint",
			"0x2B",
			"tss",
			"0x10",
			"system_tss",
			"0x2B",
			"SEG_UCODE",
			"(;;);\n",
			"rev",
			"vga_kputs",
			"vga_kputc",
			"regs_t",
			"regs",
			"struct regs",
			"struct regs ",
			"regs",
			"struct regs",
			"get",
			" \n",
			"{\n",
			"k_paging_load_directory",
			"virt_to_phys",
			"_paging_get_phys",
			"_paging_map_more",
			"K_CURRENT_PAGE_DIRECTORY",
			"QEMUOPTS",
			"mm_first_free",
			"mm",
			"lint",
			"}",
			"cli",
			"idle",
			"iret",
			"%x",
			"TK",
			"heap \n",
			"heap\n",
			"|\n",
			"block",
			"k_heap_alloc",
			"kprintx",
			"getch",
			"ISR_ERRCODE",
			"Reverse_",
			"Reverse",
			"()\n",
			",",
			"0005524",
			"GO:0005524",
			"q13526",
			"Q9Y383",
			"cerve",
			"xenopus trop",
			"xenopus",
			"P51888",
			":001015",
			"001015",
			"GO_hie",
			"table",
			"TABLE",
			"init",
			"uniprot",
			"mirage",
			"print",
			"0",
			"sub.table",
			"sub.table$f",
			"vn1",
			"vn2",
			"r2.cutoff",
			"surfact",
			"'GO:0016209'",
			"GO:0005215",
			".-",
			"ggatcc",
			"ttcgaa",
			"lint",
			"console"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"%x\\n",
			"K",
			"printf",
			"ISR_MACRO",
			"",
			"Reverse_"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 6,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "kernel/vga.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4551,
						"regions":
						{
						},
						"selection":
						[
							[
								3212,
								3212
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2795.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "kernel/malloc.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11982,
						"regions":
						{
						},
						"selection":
						[
							[
								6659,
								6659
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1900,
						"regions":
						{
						},
						"selection":
						[
							[
								1882,
								1882
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 600.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "kernel/ext2.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5288,
						"regions":
						{
						},
						"selection":
						[
							[
								447,
								447
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/D/Documents/GitHub/ext2util/Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1228,
						"regions":
						{
						},
						"selection":
						[
							[
								1192,
								1192
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/D/Documents/GitHub/ext2util/ext2_debug.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4269,
						"regions":
						{
						},
						"selection":
						[
							[
								1330,
								1330
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 120.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/D/Documents/GitHub/ext2util/ext2.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11156,
						"regions":
						{
						},
						"selection":
						[
							[
								11156,
								11156
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6717.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/D/Documents/GitHub/ext2util/ext2.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4463,
						"regions":
						{
						},
						"selection":
						[
							[
								1688,
								1688
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1080.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/D/Documents/GitHub/ext2util/ide.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1891,
						"regions":
						{
						},
						"selection":
						[
							[
								196,
								196
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/D/Documents/GitHub/markov/markov.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2795,
						"regions":
						{
						},
						"selection":
						[
							[
								2045,
								1803
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 1440.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/D/Documents/GitHub/osdev-test/elfloader.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1498,
						"regions":
						{
						},
						"selection":
						[
							[
								236,
								222
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "kernel/vfs.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2002,
						"regions":
						{
						},
						"selection":
						[
							[
								1677,
								1677
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 480.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 12,
					"file": "kernel/kernel.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6085,
						"regions":
						{
						},
						"selection":
						[
							[
								6027,
								6027
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1982.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/D/Documents/GitHub/osdev-test/Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 884,
						"regions":
						{
						},
						"selection":
						[
							[
								544,
								544
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "kernel/include/ext2.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4438,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1140.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "kernel/stage2.asm",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3423,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/NASM x86 Assembly/Assembly x86.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1480.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.539583333334,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 332.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "baremetal.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"r",
				"C:\\Users\\Mike\\Documents\\GitHub\\baremetal\\kernel\\lib\\string.c"
			],
			[
				"heap.c",
				"C:\\Users\\Mike\\Documents\\GitHub\\baremetal\\kernel\\paging.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "kegg",
		"selected_items":
		[
			[
				"kegg",
				"C:\\Users\\Mike\\Documents\\GitHub\\kegg\\kegg.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
