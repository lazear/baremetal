{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"k",
				"k_new_stream"
			],
			[
				"k_",
				"k_stream_tell"
			],
			[
				"k_st",
				"k_stream_seek"
			],
			[
				"size",
				"size_t"
			],
			[
				"k_stream",
				"k_stream_write"
			],
			[
				"fo",
				"formatted"
			],
			[
				"vga",
				"vga_puts"
			],
			[
				"fm",
				"formatted"
			],
			[
				"u",
				"uint32_t"
			],
			[
				"sched",
				"sched_active"
			],
			[
				"syste",
				"system_tss"
			],
			[
				"ticks",
				"ticks_start"
			],
			[
				"CURREN",
				"CURRENT_X"
			],
			[
				"CURR",
				"CURRENT_Y"
			],
			[
				"proc",
				"process_t"
			],
			[
				"pro",
				"process_t"
			],
			[
				"pri",
				"print_regs"
			],
			[
				"w",
				"wf_malloc"
			],
			[
				"re",
				"regs_t"
			],
			[
				"heap",
				"heap_test"
			],
			[
				"K_HEAP",
				"K_HEAP_INDEX"
			],
			[
				"K",
				"K_HEAP_INDEX"
			],
			[
				"K_",
				"K_HEAP_TOP"
			],
			[
				"siz",
				"size_t"
			],
			[
				"0x",
				"0x1000"
			],
			[
				"k_p",
				"k_paging_map_block"
			],
			[
				"mm",
				"mm_bitmap_set_bit"
			],
			[
				"MM",
				"MM_CURRENT_PT"
			],
			[
				"si",
				"size_t"
			],
			[
				"uin",
				"uint32_t"
			],
			[
				"k_pa",
				"k_page_alloc"
			],
			[
				"pa",
				"pagedir"
			],
			[
				"ff_",
				"ff_pdb"
			],
			[
				"mm_p",
				"mm_page_alloc"
			],
			[
				"mm_bit",
				"mm_bitmap_full"
			],
			[
				"mm_bi",
				"mm_bitmap_init"
			],
			[
				"MM_",
				"MM_CURRENT_PT"
			],
			[
				"pd",
				"pd_index"
			],
			[
				"mm_",
				"mm_page_free"
			],
			[
				"ff",
				"ff_pdb"
			],
			[
				"ken",
				"kernel_end"
			],
			[
				"KHE",
				"K_HEAP_PAGES"
			],
			[
				"fir",
				"first_address"
			],
			[
				"firs",
				"first_address"
			],
			[
				"pt",
				"pt_index"
			],
			[
				"mm_pag",
				"mm_page_free"
			],
			[
				"kprin",
				"kprintx"
			],
			[
				"mm_bitmap",
				"mm_bitmap_set_bit"
			],
			[
				"bitm",
				"bitmap_size"
			],
			[
				"fr",
				"free_bits"
			],
			[
				"bit",
				"bitmap"
			],
			[
				"kernel",
				"kernel_end"
			],
			[
				"kern",
				"kernel_end"
			],
			[
				"int",
				"integer_size"
			],
			[
				"in",
				"integer"
			],
			[
				"pre",
				"pre_size"
			],
			[
				"de",
				"decimal"
			],
			[
				"un",
				"uint8_t"
			],
			[
				"VGA_LIGHT",
				"VGA_LIGHTMAGENTA"
			],
			[
				"color",
				"color"
			],
			[
				"start",
				"start_y"
			],
			[
				"CUR",
				"CURRENT_Y"
			],
			[
				"st",
				"start_y"
			],
			[
				"vga_",
				"vga_puts"
			],
			[
				"stat",
				"start_y"
			],
			[
				"CU",
				"CURRENT_Y"
			],
			[
				"kene",
				"kernel_initialize"
			],
			[
				"ent",
				"enter_protected_mode"
			],
			[
				"gdt",
				"gdt_init"
			],
			[
				"idt",
				"idt_entry"
			],
			[
				"irq",
				"irqstub"
			],
			[
				"CURRE",
				"CURRENT_ATTRIB"
			],
			[
				"vg",
				"vga_kputc"
			],
			[
				"VGA",
				"VGA_TERMINAL"
			],
			[
				"KERNE",
				"KERNEL_VIRTUAL_BASE"
			],
			[
				"get",
				"get_brite_terms	function"
			],
			[
				"ge",
				"geneid	statement"
			],
			[
				"a",
				"accession	param"
			],
			[
				"map",
				"map_dict	param"
			],
			[
				"inp",
				"input_file	param"
			],
			[
				"mapp",
				"mapping_file	param"
			],
			[
				"dict",
				"dictionary	statement"
			],
			[
				"write",
				"writelines	function"
			],
			[
				"dic",
				"dictionary	statement"
			],
			[
				"di",
				"dictionary	statement"
			],
			[
				"gene",
				"generate_hierarchy	function"
			],
			[
				"not",
				"not_found	statement"
			],
			[
				"no",
				"not_found	statement"
			],
			[
				"ca",
				"catgories	statement"
			],
			[
				"cou",
				"counts_cat	statement"
			],
			[
				"json",
				"json_dict"
			],
			[
				"json_",
				"json_dict	statement"
			],
			[
				"res",
				"res_names	statement"
			],
			[
				"res_sites_",
				"res_sites_rev	statement"
			],
			[
				"pr",
				"process3	function"
			],
			[
				"h",
				"h_name	statement"
			],
			[
				"proce",
				"process3	function"
			],
			[
				"drugb",
				"drugbank_enrich	function"
			],
			[
				"count",
				"counts_indb	statement"
			],
			[
				"db",
				"db_yayornay	statement"
			],
			[
				"annot",
				"annotation	statement"
			],
			[
				"pep",
				"peptide	param"
			],
			[
				"seq",
				"sequence"
			],
			[
				"uni",
				"uniprotID	param"
			],
			[
				"find",
				"findresidue	function"
			],
			[
				"con",
				"conserved	statement"
			],
			[
				"align",
				"aligned	statement"
			],
			[
				"go",
				"go_dict	statement"
			],
			[
				"dis",
				"distance_from_top	param"
			],
			[
				"sort",
				"sort_keys	param"
			],
			[
				"h_",
				"h_sequence	statement"
			],
			[
				"chi",
				"chi_dict	statement"
			],
			[
				"fly",
				"fly_unlabelled	statement"
			],
			[
				"flc",
				"flyc	statement"
			],
			[
				"head",
				"headers	statement"
			],
			[
				"org",
				"org_dict	forstmt"
			],
			[
				"lab",
				"labelled_num	statement"
			],
			[
				"unl",
				"unlabelled_num	statement"
			],
			[
				"lba",
				"labelled_ratios	statement"
			],
			[
				"rat",
				"ratio_la	statement"
			],
			[
				"labe",
				"labelled_ratios	statement"
			],
			[
				"ratio",
				"ratio_un	statement"
			],
			[
				"unlab",
				"unlabelled_ratios	statement"
			],
			[
				"unbal",
				"unlabelled"
			],
			[
				"id",
				"identifier"
			],
			[
				"other",
				"other_lysines	statement"
			],
			[
				"actu",
				"actual_count	statement"
			],
			[
				"acual",
				"actual_count"
			]
		]
	},
	"buffers":
	[
		{
			"file": "paging.c",
			"settings":
			{
				"buffer_size": 2516,
				"line_ending": "Windows"
			}
		},
		{
			"file": "heap.c",
			"settings":
			{
				"buffer_size": 2039,
				"line_ending": "Windows",
				"name": "/*"
			}
		},
		{
			"file": "start.s",
			"settings":
			{
				"buffer_size": 2920,
				"line_ending": "Windows"
			}
		},
		{
			"file": "printf.c",
			"settings":
			{
				"buffer_size": 2455,
				"line_ending": "Windows"
			}
		},
		{
			"file": "stdlib.c",
			"settings":
			{
				"buffer_size": 5100,
				"line_ending": "Windows"
			}
		},
		{
			"file": "string.c",
			"settings":
			{
				"buffer_size": 2422,
				"line_ending": "Windows"
			}
		},
		{
			"file": "include/stdarg.h",
			"settings":
			{
				"buffer_size": 768,
				"line_ending": "Windows"
			}
		},
		{
			"file": "stream.c",
			"settings":
			{
				"buffer_size": 1947,
				"line_ending": "Windows",
				"name": "/*"
			}
		},
		{
			"file": "include/types.h",
			"settings":
			{
				"buffer_size": 772,
				"line_ending": "Windows"
			}
		},
		{
			"file": "kernel.c",
			"settings":
			{
				"buffer_size": 3978,
				"line_ending": "Windows"
			}
		},
		{
			"file": "vga.c",
			"settings":
			{
				"buffer_size": 3055,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "/*\nvga.c\nMichael Lazear, 2007-2016\n\nImplementation of x86 interrupts and inline assembly for baremetal\nAdapted/taken from Bran's Kernel Dev tutorial.\n*/\n\n\n\n#include <types.h>\n#include <x86.h>\n\n/****************************************\n*		        ASM Template			*\n* asm (\"operands, %%reg, val\"	    	*\n*			:outputs					*\n*			:inputs)					*\n* outputs example: \"=r\"(val)			*\n* inputs example: \"r\"(10)				*\n*****************************************/\nint set_eflags(int val) {\n	int flags;\n	asm volatile(\"			\\\n				 pushf;		\\\n				 pop %%eax;	\\\n				 mov %%eax, %0;	\" : \"=r\"(flags));\n	flags |= val;\n	asm volatile(\"				\\\n				 mov %0, %%eax;	\\\n				 push %%eax;	\\\n				 popf;\" : :\"r\"(flags));\n	return flags;\n}\n\nint get_eflags(void) {\n	int flags;\n	asm volatile(\"			\\\n				 pushf;		\\\n				 pop %%eax;	\\\n				 mov %%eax, %0;	\" : \"=r\"(flags));\n	return flags;\n}\n\n\nuint8_t inportb(uint16_t port) {\n  // \"=a\" (result) means: put AL register in variable result when finished\n  // \"d\" (_port) means: load EDX with _port\n  unsigned char result;\n   asm volatile(\"inb %1, %0\" : \"=a\" (result) : \"dN\" (port));\n  return result;\n}\n\nvoid outportb(uint16_t port, uint16_t data) {\n	asm volatile (\"outb %1, %0\" : : \"dN\" (port), \"a\" (data));\n}\n\nuint16_t inportw(uint16_t port) {\n	unsigned short result;\n	asm volatile (\"inw %1, %0\" : \"=a\" (result) : \"dN\" (port));\n	return result;\n}\n\nvoid outportw(uint16_t port, uint16_t data) {\n	asm volatile(\"outw %1, %0\" : :\"dN\"(port), \"a\"(data));\n}\n\nvoid outportl(uint16_t port, uint32_t data) {\n	asm volatile(\"outl %1, %0\" : :\"dN\"(port), \"a\"(data));\n}\n\nuint64_t inportl(uint16_t port) {\n	uint32_t ret;\n	asm volatile(\"inl %1, %0\" : \"=a\"(ret) : \"dN\"(port));\n}\n\n\nstruct idt_entry idt[256];\nstruct idt_ptr idt_pointer;\n\nstruct gdt_entry gdt[8];\nstruct gdt_ptr gdt_pointer;\n\n\n/* This array is actually an array of function pointers. We use\n*  this to handle custom IRQ handlers for a given IRQ */\nvoid *irq_routines[16] =\n{\n    0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0\n};\n\n/* This installs a custom IRQ handler for the given IRQ */\nvoid irq_install_handler(int irq, void (*handler)(struct regs *r))\n{\n    irq_routines[irq] = handler;\n}\n\n/* This clears the handler for a given IRQ */\nvoid irq_uninstall_handler(int irq)\n{\n    irq_routines[irq] = 0;\n}\n\nvoid irq_remap(void)\n{\n    outportb(0x20, 0x11);\n    outportb(0xA0, 0x11);\n    outportb(0x21, 0x20);\n    outportb(0xA1, 0x28);\n    outportb(0x21, 0x04);\n    outportb(0xA1, 0x02);\n    outportb(0x21, 0x01);\n    outportb(0xA1, 0x01);\n    outportb(0x21, 0x0);\n    outportb(0xA1, 0x0);\n}\n\nvoid irq_handler(struct regs *r)\n{\n\n	if (r->int_no < 32) {\n		kprintd(\"Exception: \", r->int_no);\n		return;\n	}\n\n    /* This is a blank function pointer */\n    void (*handler)(struct regs *r);\n\n    /* Find out if we have a custom handler to run for this\n    *  IRQ, and then finally, run it */\n    handler = irq_routines[r->int_no - 32];\n\n    if (handler)\n    {\n		//printf(\"IRQ Calling handler: 0x%x\\n\", handler);\n        handler(r);\n    }\n\n    /* If the IDT entry that was invoked was greater than 40\n    *  (meaning IRQ8 - 15), then we need to send an EOI to\n    *  the slave controller */\n    if (r->int_no >= 40)\n    {\n        outportb(0xA0, 0x20);\n    }\n\n    /* In either case, we need to send an EOI to the master\n    *  interrupt controller too */\n    outportb(0x20, 0x20);\n}\n\nvoid idt_set_gate(uint8_t num, uint32_t base, uint16_t sel, uint8_t flags) {\n	/* The interrupt routine's base address */\n	idt[num].base_lo = (base & 0xFFFF);\n	idt[num].base_hi = (base >> 16) & 0xFFFF;\n\n	/* The segment or 'selector' that this IDT entry will use\n	*  is set here, along with any access flags */\n	idt[num].sel = sel;\n	idt[num].always0 = 0;\n	idt[num].flags = flags;\n}\n\nvoid idt_init() {\n	/* Sets the special IDT pointer up, just like in 'gdt.c' */\n	idt_pointer.limit = (sizeof (struct idt_entry) * 256) - 1;\n	idt_pointer.base = &idt;\n\n	/* Clear out the entire IDT, initializing it to zeros */\n//	memset(&idt, 0, sizeof(struct idt_entry) * 256);\n\n/*\n	for (int i = 0; i < sizeof(struct idt_entry) * 256; i++) {\n		int* pointer = &idt;\n		pointer[i] = 0;\n	}\n*/\n	/* Add any new ISRs to the IDT here using idt_set_gate */\n    idt_set_gate(0, (unsigned)isr0, 0x08, 0x8E);\n    idt_set_gate(1, (unsigned)isr1, 0x08, 0x8E);\n    idt_set_gate(2, (unsigned)isr2, 0x08, 0x8E);\n    idt_set_gate(3, (unsigned)isr3, 0x08, 0x8E);\n    idt_set_gate(4, (unsigned)isr4, 0x08, 0x8E);\n    idt_set_gate(5, (unsigned)isr5, 0x08, 0x8E);\n    idt_set_gate(6, (unsigned)isr6, 0x08, 0x8E);\n    idt_set_gate(7, (unsigned)isr7, 0x08, 0x8E);\n\n    idt_set_gate(8, (unsigned)isr8, 0x08, 0x8E);\n    idt_set_gate(9, (unsigned)isr9, 0x08, 0x8E);\n    idt_set_gate(10, (unsigned)isr10, 0x08, 0x8E);\n    idt_set_gate(11, (unsigned)isr11, 0x08, 0x8E);\n    idt_set_gate(12, (unsigned)isr12, 0x08, 0x8E);\n    idt_set_gate(13, (unsigned)isr13, 0x08, 0x8E);\n    idt_set_gate(14, (unsigned)isr14, 0x08, 0x8E);\n    idt_set_gate(15, (unsigned)isr15, 0x08, 0x8E);\n\n    idt_set_gate(16, (unsigned)isr16, 0x08, 0x8E);\n    idt_set_gate(17, (unsigned)isr17, 0x08, 0x8E);\n    idt_set_gate(18, (unsigned)isr18, 0x08, 0x8E);\n    idt_set_gate(19, (unsigned)isr19, 0x08, 0x8E);\n    idt_set_gate(20, (unsigned)isr20, 0x08, 0x8E);\n    idt_set_gate(21, (unsigned)isr21, 0x08, 0x8E);\n    idt_set_gate(22, (unsigned)isr22, 0x08, 0x8E);\n    idt_set_gate(23, (unsigned)isr23, 0x08, 0x8E);\n\n    idt_set_gate(24, (unsigned)isr24, 0x08, 0x8E);\n    idt_set_gate(25, (unsigned)isr25, 0x08, 0x8E);\n    idt_set_gate(26, (unsigned)isr26, 0x08, 0x8E);\n    idt_set_gate(27, (unsigned)isr27, 0x08, 0x8E);\n    idt_set_gate(28, (unsigned)isr28, 0x08, 0x8E);\n    idt_set_gate(29, (unsigned)isr29, 0x08, 0x8E);\n    idt_set_gate(30, (unsigned)isr30, 0x08, 0x8E);\n    idt_set_gate(31, (unsigned)isr31, 0x08, 0x8E);\n\n    // call an IRQ re-map\n\n    irq_remap();\n\n    idt_set_gate(32, (unsigned)irq0, 0x08, 0x8E);\n    idt_set_gate(33, (unsigned)irq1, 0x08, 0x8E);\n    idt_set_gate(34, (unsigned)irq2, 0x08, 0x8E);\n    idt_set_gate(35, (unsigned)irq3, 0x08, 0x8E);\n    idt_set_gate(36, (unsigned)irq4, 0x08, 0x8E);\n    idt_set_gate(37, (unsigned)irq5, 0x08, 0x8E);\n    idt_set_gate(38, (unsigned)irq6, 0x08, 0x8E);\n    idt_set_gate(39, (unsigned)irq7, 0x08, 0x8E);\n\n    idt_set_gate(40, (unsigned)irq8, 0x08, 0x8E);\n    idt_set_gate(41, (unsigned)irq9, 0x08, 0x8E);\n    idt_set_gate(42, (unsigned)irq10, 0x08, 0x8E);\n    idt_set_gate(43, (unsigned)irq11, 0x08, 0x8E);\n    idt_set_gate(44, (unsigned)irq12, 0x08, 0x8E);\n    idt_set_gate(45, (unsigned)irq13, 0x08, 0x8E);\n    idt_set_gate(46, (unsigned)irq14, 0x08, 0x8E);\n    idt_set_gate(47, (unsigned)irq15, 0x08, 0x8E);\n	/* Points the processor's internal register to the new IDT */\n	idt_load();\n}\n\nvoid gdt_set_gate(int num, unsigned long base, unsigned long limit, unsigned char access, unsigned char gran)\n{\n    /* Setup the descriptor base address */\n    gdt[num].base_low = (base & 0xFFFF);\n    gdt[num].base_middle = (base >> 16) & 0xFF;\n    gdt[num].base_high = (base >> 24) & 0xFF;\n\n    /* Setup the descriptor limits */\n    gdt[num].limit_low = (limit & 0xFFFF);\n    gdt[num].granularity = ((limit >> 16) & 0x0F);\n\n    /* Finally, set up the granularity and access flags */\n    gdt[num].granularity |= (gran & 0xF0);\n    gdt[num].access = access;\n}\n\n// Statically allocate, since we just need one entry\nstruct tss_entry system_tss;\nextern uint32_t* read_stack_pointer();\n\nvoid tss_init() {\n    uint32_t base = (uint32_t) &system_tss;         // address of tss\n    uint32_t limit = base + sizeof(system_tss);     // limit of selector\n\n    gdt_set_gate(5, base, limit, 0xE9, 0xC0);     // setup gdt entry\n    memset(&system_tss, 0, sizeof(system_tss));     // clear the tss\n\n    system_tss.ss0  = 0x10;\n    system_tss.esp0 = 0x0;\n    system_tss.cs   = 0xb;\n    system_tss.ss   = system_tss.ds = system_tss.es = system_tss.fs = system_tss.gs = 0x13;     // RPL = 3\n}\n\nvoid gdt_init()\n{\n    gdt_pointer.limit = (sizeof(struct gdt_entry) * 6) - 1;\n    gdt_pointer.base = &gdt;\n\n    gdt_set_gate(0, 0, 0, 0, 0);					// 0x00\n    gdt_set_gate(1, 0, 0xFFFFFFFF, 0x9A, 0xCF);		// 0x08 Code, PL0\n    gdt_set_gate(2, 0, 0xFFFFFFFF, 0x92, 0xCF);		// 0x10 Data, PL0\n	gdt_set_gate(3, 0, 0xFFFFFFFF, 0xFA, 0xCF);		// 0x18 Code, PL3\n	gdt_set_gate(4, 0, 0xFFFFFFFF, 0xF2, 0xCF);		// 0x20 Data, PL3\n\n	tss_init();\n    gdt_flush();\n\n    tss_flush();\n}\n\n\n",
			"file": "x86.c",
			"file_size": 8628,
			"file_write_time": 131155135603171001,
			"settings":
			{
				"buffer_size": 8337,
				"line_ending": "Windows"
			}
		},
		{
			"file": "include/paging.h",
			"settings":
			{
				"buffer_size": 407,
				"line_ending": "Windows"
			}
		},
		{
			"file": "include/stdlib.h",
			"settings":
			{
				"buffer_size": 393,
				"line_ending": "Windows"
			}
		},
		{
			"file": "include/string.h",
			"settings":
			{
				"buffer_size": 259,
				"line_ending": "Windows"
			}
		},
		{
			"file": "include/vga.h",
			"settings":
			{
				"buffer_size": 999,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 288.0,
		"last_filter": "anacoda",
		"selected_items":
		[
			[
				"anacoda",
				"Anaconda: Disable linting on this file"
			],
			[
				"delint",
				"Anaconda: Disable linting on this file"
			],
			[
				"dislint",
				"Anaconda: Disable linting on this file"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"packag",
				"Preferences: Browse Packages"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 160.0,
		"history":
		[
			"def fastaUniProt(x):",
			"fastaUniProt()",
			"stop()",
			"exit()",
			"help",
			"help()",
			"version()",
			"version",
			"import numpy.matrix",
			"import numpy",
			"names = [[][]]",
			"names",
			"names[1].append(2)",
			"names[0].append(1)",
			"names",
			"names=[[]]",
			"names[1].append(1)",
			"names",
			"names.append(1)",
			"names",
			"names[0].append(1)",
			"names",
			"names.append(1)",
			"names",
			"names=[[]]",
			"names",
			"names=[]",
			"names = [1][1]",
			"next(c)",
			"reader = csv.reader(c, delimiter='\\t')",
			"reader = csv.read(c, delimiter='\\t')",
			"import csv",
			"c = open('compare.txt')",
			"c.read()",
			"c",
			"c.read()",
			"c",
			"c = open('compare.txt')",
			"print(\"hello\")",
			"help()",
			"help",
			"dir()",
			"dir",
			"ls",
			"c",
			"py",
			"python",
			"sublimetest",
			"b",
			"help",
			"python --version",
			"python",
			"function1",
			"x",
			"function(h)",
			"function",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/Mike/Documents/GitHub/baremetal/task.c",
		"/C/Users/Mike/Documents/GitHub/baremetal/sched.c",
		"/C/Users/Mike/Documents/GitHub/baremetal/include/x86.h",
		"/C/Users/Mike/Documents/GitHub/baremetal/mm.c",
		"/C/Users/Mike/Documents/GitHub/baremetal/stdlib.c",
		"/C/Users/Mike/Documents/GitHub/baremetal/string.c",
		"/C/Users/Mike/Documents/GitHub/baremetal/include/stdarg.h",
		"/C/Users/Mike/Documents/GitHub/os/core/memory/malloc.c",
		"/C/Users/Mike/Documents/GitHub/baremetal/vga.c",
		"/C/Users/Mike/Documents/GitHub/baremetal/x86.c",
		"/C/Users/Mike/Documents/GitHub/baremetal/linker.ld",
		"/C/Users/Mike/Documents/GitHub/baremetal/start.s",
		"/C/Users/Mike/Documents/GitHub/dev/mirage/concoct.py",
		"/C/Users/Mike/Documents/GitHub/os/libc/string.c",
		"/C/Users/Mike/Documents/GitHub/os/libc/stdio.c",
		"/C/Users/Mike/Documents/GitHub/os/include/core/external.h",
		"/C/Users/Mike/Documents/GitHub/os/include/core/gdt.h",
		"/C/Users/Mike/Documents/GitHub/os/include/core/kernel.h",
		"/C/Users/Mike/Documents/GitHub/os/include/core/keyboard.h",
		"/C/Users/Mike/Documents/GitHub/os/include/core/multiboot.h",
		"/C/Users/Mike/Documents/GitHub/os/include/core/mutex.h",
		"/C/Users/Mike/Documents/GitHub/os/include/core/paging.h",
		"/C/Users/Mike/Documents/GitHub/os/include/core/regs.h",
		"/C/Users/Mike/Documents/GitHub/os/include/core/tss.h",
		"/C/Users/Mike/Documents/GitHub/os/include/core/types.h",
		"/C/Users/Mike/Documents/GitHub/os/include/core/video.h",
		"/C/Users/Mike/Documents/GitHub/os/include/lib/assert.h",
		"/C/Users/Mike/Documents/GitHub/baremetal/include/assert.h",
		"/C/Users/Mike/Documents/GitHub/os/drivers/char/text.c",
		"/C/Users/Mike/Documents/GitHub/os/include/lib/atomic.h",
		"/C/Users/Mike/Documents/GitHub/os/include/lib/bool.h",
		"/C/Users/Mike/Documents/GitHub/os/include/lib/ctype.h",
		"/C/Users/Mike/Documents/GitHub/baremetal/Makefile",
		"/C/Users/Mike/Documents/GitHub/baremetal/include/iso646.h",
		"/C/Users/Mike/Documents/GitHub/baremetal/include/ctype.h",
		"/C/Users/Mike/Documents/GitHub/os/include/lib/iso646.h",
		"/C/Users/Mike/Documents/GitHub/os/libc/printf.c",
		"/C/Users/Mike/Documents/GitHub/os/main.c",
		"/C/Users/Mike/Documents/GitHub/os/core/init.c",
		"/C/Users/Mike/Documents/GitHub/baremetal/include/types.h",
		"/C/Users/Mike/Documents/GitHub/baremetal/include/vga.h",
		"/C/Users/Mike/Documents/GitHub/os/drivers/char/keyboard.c",
		"/C/Users/Mike/Downloads/irq.c",
		"/C/Users/Mike/Downloads/isrs (1).c",
		"/C/Users/Mike/Downloads/start (1).asm",
		"/C/Users/Mike/Documents/GitHub/os/syscall/syscall.c",
		"/C/Users/Mike/Documents/GitHub/os/asm/higherhalf.s",
		"/C/Users/Mike/Documents/GitHub/os/asm/switch.asm",
		"/C/Users/Mike/Documents/GitHub/os/asm/start.s",
		"/C/Users/Mike/Downloads/isrs.c",
		"/C/Users/Mike/Downloads/idt.c",
		"/C/Users/Mike/Documents/GitHub/baremetal/interrupts.c",
		"/C/Users/Mike/Documents/GitHub/os/core/arch/gdt.c",
		"/C/Users/Mike/Documents/GitHub/os/core/arch/isr.c",
		"/C/Users/Mike/Documents/GitHub/os/core/arch/idt.c",
		"/C/Users/Mike/Documents/GitHub/os/core/arch/irq.c",
		"/C/Users/Mike/Documents/GitHub/os/asm/gdt.asm",
		"/C/Users/Mike/Documents/GitHub/os/asm/irq.asm",
		"/C/Users/Mike/Downloads/start.asm",
		"/C/Users/Mike/Documents/GitHub/os/core/sched.c",
		"/C/Users/Mike/Documents/GitHub/os/asm/isr.asm",
		"/C/Users/Mike/Documents/GitHub/baremetal/kernel.h",
		"/C/Users/Mike/Documents/GitHub/baremetal/vga.h",
		"/C/Users/Mike/Documents/GitHub/os/Makefile",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/Makefile",
		"/C/Users/Mike/Documents/GitHub/os/elf.ld",
		"/C/Users/Mike/Documents/GitHub/os/asm/bootsect.asm",
		"/C/Users/Mike/Documents/GitHub/os/core/memory/paging.c",
		"/C/Users/Mike/Documents/GitHub/os/asm/inc.asm",
		"/C/Users/Mike/Documents/GitHub/os/drivers/clock/timer.c",
		"/C/Users/Mike/Documents/GitHub/os/core/memory/stack.c",
		"/C/Users/Mike/Documents/GitHub/os/asm/loader.asm",
		"/C/Users/Mike/Documents/GitHub/os/include/core/stdarg.h",
		"/C/Users/Mike/Documents/GitHub/os/include/core/fs.h",
		"/C/Users/Mike/Documents/GitHub/os/core/arch/cpuid.c",
		"/C/Users/Mike/Documents/GitHub/os/include/core/task.h",
		"/C/Users/Mike/Documents/GitHub/os/core/arch/x86.c",
		"/C/Users/Mike/Documents/GitHub/os/include/core/exec.h",
		"/C/Users/Mike/Documents/GitHub/os/include/lib/syscall.h",
		"/C/Users/Mike/Documents/GitHub/os/include/lib/api.h",
		"/C/Users/Mike/Documents/GitHub/dev/mirage/combine/mirage.py",
		"/C/Users/Mike/Documents/GitHub/kegg/__pycache__/html.cpython-35.pyc",
		"/C/Users/Mike/Documents/GitHub/kegg/pulldowns",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/core/init.c",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/main.c",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/include/lib/assert.h",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/core/arch/x86.c",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/core/task/malloc.c",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/core/memory/stack.c",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/core/arch/cpuid.c",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/core/memory/paging.c",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/syscall/syscall.c",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/asm/start.s",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/asm/switch.asm",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/libc/stdio.c",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/libc/string.c",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/include/lib/api.h",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/libc/printf.c",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/drivers/char/text.c",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/drivers/disk/fs.c",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/asm/higherhalf.s",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/asm/loader.asm",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/asm/gdt.asm",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/core/module.c",
		"/C/Users/Mike/Documents/GitHub/kegg/parse_brite.py",
		"/C/Users/Mike/Documents/GitHub/kegg/autobrite",
		"/C/Users/Mike/Documents/GitHub/kegg/brite_to_json.py",
		"/C/Users/Mike/Documents/GitHub/kegg/superfamily.py",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/core/exec.c",
		"/C/Users/Mike/Documents/GitHub/kegg/brite",
		"/C/Users/Mike/Documents/GitHub/kegg/test.txt",
		"/C/Users/Mike/Documents/GitHub/kegg/pulldowns.txt",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/asm/bootsect.asm",
		"/C/Users/Mike/Documents/GitHub/dev/mirage/parse.py",
		"/C/Users/Mike/Documents/GitHub/kegg/acc_to_geneid.py",
		"/C/Users/Mike/Documents/GitHub/dev/mirage/ctest.py",
		"/C/Users/Mike/Documents/GitHub/kegg/t",
		"/C/Users/Mike/Documents/GitHub/dev/mirage/traverse.py",
		"/C/Users/Mike/Documents/GitHub/dev/mirage/annotate.py",
		"/C/Users/Mike/Documents/GitHub/fun/roman.py",
		"/C/Users/Mike/Documents/GitHub/fun/codon.py",
		"/C/Users/Mike/Documents/GitHub/fun/uniprot",
		"/C/Users/Mike/Downloads/ko03041.keg",
		"/C/Users/Mike/Downloads/br08904.keg",
		"/C/Users/Mike/Downloads/br08902.keg",
		"/C/Users/Mike/Documents/Cravatt/Pin1/4TNS_out/4TNS_PYMOL.sh",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/elf.ld",
		"/C/Users/Mike/Documents/kryos/snapshot.06.10.09/higherhalf.ld"
	],
	"find":
	{
		"height": 36.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"putc",
			"puts",
			"irq_ack",
			"alloc()",
			"k_paging_map_block",
			"k_heap_alloc",
			"ISR_ERRCODE",
			"Reverse_",
			"Reverse",
			"()\n",
			",",
			"0005524",
			"GO:0005524",
			"q13526",
			"Q9Y383",
			"cerve",
			"xenopus trop",
			"xenopus",
			"P51888",
			":001015",
			"001015",
			"GO_hie",
			"table",
			"TABLE",
			"init",
			"uniprot",
			"mirage",
			"print",
			"0",
			"sub.table",
			"sub.table$f",
			"vn1",
			"vn2",
			"r2.cutoff",
			"surfact",
			"'GO:0016209'",
			"GO:0005215",
			".-",
			"ggatcc",
			"ttcgaa",
			"lint",
			"console"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"vga_putc",
			"vga_puts",
			"k_paging_map",
			"k_paging_map_block",
			"ISR_MACRO",
			"",
			"Reverse_"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 7,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "paging.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2516,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 360.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "heap.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2039,
						"regions":
						{
						},
						"selection":
						[
							[
								1228,
								1228
							]
						],
						"settings":
						{
							"auto_name": "/*",
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1118.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "start.s",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2920,
						"regions":
						{
						},
						"selection":
						[
							[
								1216,
								1216
							]
						],
						"settings":
						{
							"syntax": "Packages/R/R.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1640.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "printf.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2455,
						"regions":
						{
						},
						"selection":
						[
							[
								454,
								454
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "stdlib.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5100,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": -0.0,
						"translation.y": 1080.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "string.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2422,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1140.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "include/stdarg.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 768,
						"regions":
						{
						},
						"selection":
						[
							[
								239,
								239
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "stream.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1947,
						"regions":
						{
						},
						"selection":
						[
							[
								1947,
								1947
							]
						],
						"settings":
						{
							"auto_name": "/*",
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1100.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "include/types.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 772,
						"regions":
						{
						},
						"selection":
						[
							[
								567,
								567
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 60.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 9,
					"file": "kernel.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3978,
						"regions":
						{
						},
						"selection":
						[
							[
								3964,
								3964
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1560.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "vga.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3055,
						"regions":
						{
						},
						"selection":
						[
							[
								912,
								912
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 360.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "x86.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8337,
						"regions":
						{
						},
						"selection":
						[
							[
								7456,
								7456
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4587.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "include/paging.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 407,
						"regions":
						{
						},
						"selection":
						[
							[
								407,
								407
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "include/stdlib.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 393,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "include/string.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 259,
						"regions":
						{
						},
						"selection":
						[
							[
								259,
								259
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "include/vga.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 999,
						"regions":
						{
						},
						"selection":
						[
							[
								60,
								60
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.4703125,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 30.0
	},
	"output.find_results":
	{
		"height": 29.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "baremetal.sublime-project",
	"replace":
	{
		"height": 66.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "kegg",
		"selected_items":
		[
			[
				"kegg",
				"C:\\Users\\Mike\\Documents\\GitHub\\kegg\\kegg.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
